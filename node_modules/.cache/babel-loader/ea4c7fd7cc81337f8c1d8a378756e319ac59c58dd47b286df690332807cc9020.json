{"ast":null,"code":"var _jsxFileName = \"F:\\\\B Web development\\\\react\\\\my-app\\\\src\\\\Componants\\\\Textform.js\",\n  _s = $RefreshSig$();\n// create state\n// hooks it is finction based componant\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Textform(props) {\n  _s();\n  // using this function if we can clicked the convert uppercase button the value in the textbox convert to thr uppercase\n\n  const handleupClick = () => {\n    let newText = text.toLocaleUpperCase();\n    // we want to change the state then we use this function\n    setText(newText);\n  };\n  const handlelowClick = () => {\n    let newText = text.toLocaleLowerCase();\n    // we want to change the state then we use this function\n    setText(newText);\n  };\n  const speak = () => {\n    let msg = new SpeechSynthesisUtterance();\n    msg.text = text;\n    window.speechSynthesis.speak(msg);\n  };\n  const clear = () => {\n    let clr = \" \";\n    setText(clr);\n  };\n  const capital = () => {\n    let str = text;\n    const arr = str.split(\" \");\n    for (var i = 0; i < arr.length; i++) {\n      arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\n    }\n    const str2 = arr.join(\" \");\n    console.log(str2);\n  };\n\n  // uisng this function we can add text\n  const handleOnChange = event => {\n    setText(event.target.value);\n  };\n  const [text, setText] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\"\n          // in this value we can set the text value using state\n          ,\n          value: text,\n          onChange: handleOnChange,\n          id: \"exampleFormControlTextarea1\",\n          rows: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary mx-2\",\n        onClick: handleupClick,\n        children: \"Uppercase \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary mx-2\",\n        onClick: handlelowClick,\n        children: \"Lowercase \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary mx-2\",\n        onClick: speak,\n        children: \"Speak\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-danger mx-2\",\n        onClick: clear,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-danger mx-2\",\n        onClick: capital,\n        children: \"Capitalise\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"className my-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Text Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [text.split(\" \").length, \" word and \", text.length, \" character\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [0.008 * text.split(\" \").length, \" Minute Word\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(Textform, \"3t0DFnMi16eB/7p7iIKtjG5r68g=\");\n_c = Textform;\nvar _c;\n$RefreshReg$(_c, \"Textform\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Textform","props","_s","handleupClick","newText","text","toLocaleUpperCase","setText","handlelowClick","toLocaleLowerCase","speak","msg","SpeechSynthesisUtterance","window","speechSynthesis","clear","clr","capital","str","arr","split","i","length","charAt","toUpperCase","slice","str2","join","console","log","handleOnChange","event","target","value","children","className","heading","fileName","_jsxFileName","lineNumber","columnNumber","onChange","id","rows","type","onClick","_c","$RefreshReg$"],"sources":["F:/B Web development/react/my-app/src/Componants/Textform.js"],"sourcesContent":["// create state\r\n// hooks it is finction based componant\r\nimport React, { useState } from \"react\";\r\n\r\nexport default function Textform(props) {\r\n  // using this function if we can clicked the convert uppercase button the value in the textbox convert to thr uppercase\r\n\r\n  const handleupClick = () => {\r\n    let newText = text.toLocaleUpperCase();\r\n    // we want to change the state then we use this function\r\n    setText(newText);\r\n  };\r\n  const handlelowClick = () => {\r\n    let newText = text.toLocaleLowerCase();\r\n    // we want to change the state then we use this function\r\n    setText(newText);\r\n  };\r\n\r\n  \r\n  const speak =() =>{\r\n    let msg = new SpeechSynthesisUtterance();\r\n    msg.text=text;\r\n    window.speechSynthesis.speak(msg);\r\n  }\r\n  const clear =() =>{\r\n    let clr = \" \";\r\n    setText(clr);\r\n  }\r\n\r\n  const capital =() =>{\r\n    let str =text;\r\n    const arr=str.split(\" \");\r\n\r\n    for (var i=0; i<arr.length; i++){\r\n      arr[i]=arr[i].charAt(0).toUpperCase()+ arr[i].slice(1);\r\n    }\r\n    const str2 =arr.join(\" \");\r\n    console.log(str2);\r\n\r\n  }\r\n\r\n  // uisng this function we can add text\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n\r\n  const [text, setText] = useState(\"\");\r\n  return (<>\r\n    <div className=\"Container\">\r\n      {/* //we can assign the props */}\r\n      <h1>{props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n        {/* <label for=\"MyTExt\" class=\"form-label\">\r\n            Enter text\r\n            </label> */}\r\n        <textarea\r\n          className=\"form-control\"\r\n          // in this value we can set the text value using state\r\n          value={text} onChange={handleOnChange} id=\"exampleFormControlTextarea1\" rows=\"10\"></textarea>\r\n      </div>\r\n      <button type=\"button\" className=\"btn btn-primary mx-2\" onClick={handleupClick}>Uppercase </button>\r\n      <button type=\"button\" className=\"btn btn-primary mx-2\" onClick={handlelowClick}>Lowercase </button>\r\n      <button type=\"button\" className=\"btn btn-primary mx-2\" onClick={speak}>Speak</button>\r\n      <button type=\"button\" className=\"btn btn-danger mx-2\" onClick={clear}>Clear</button>\r\n      <button type=\"button\" className=\"btn btn-danger mx-2\" onClick={capital}>Capitalise</button>\r\n    </div>\r\n\r\n    <div className=\"className my-3\">\r\n      <h3>Your Text Summary</h3>\r\n      <p>{text.split(\" \").length} word and {text.length} character</p>\r\n      <p>{0.008*text.split(\" \").length} Minute Word</p>\r\n      <h3>Preview</h3>\r\n      <p>{text}</p>      \r\n    </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}