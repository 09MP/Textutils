{"ast":null,"code":"var _jsxFileName = \"F:\\\\B Web development\\\\react\\\\my-app\\\\src\\\\Componants\\\\Textform.js\",\n  _s = $RefreshSig$();\n// create state \n// hooks it is finction based componant\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Textform(props) {\n  _s();\n  // using this function if we can clicked the convert uppercase button the value in the textbox convert to thr uppercase\n\n  const handleupClick = () => {\n    let newText = text.toLocaleUpperCase();\n    // we want to change the state then we use this function\n    setText(newText);\n  };\n  // \n  const handleOnChange = event => {\n    setText(event.target.value);\n  };\n  const [text, setText] = useState('Enter Text Here');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.heading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\"\n        // in this value we can set the text value using state\n        ,\n        value: text,\n        onChange: handleOnChange,\n        id: \"exampleFormControlTextarea1\",\n        rows: \"18\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: handleupClick,\n      children: \"convert to uppercase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(Textform, \"AtZHMCfKDs3emA8hhbbtooXqWdw=\");\n_c = Textform;\nvar _c;\n$RefreshReg$(_c, \"Textform\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Textform","props","_s","handleupClick","newText","text","toLocaleUpperCase","setText","handleOnChange","event","target","value","children","heading","fileName","_jsxFileName","lineNumber","columnNumber","className","onChange","id","rows","type","onClick","_c","$RefreshReg$"],"sources":["F:/B Web development/react/my-app/src/Componants/Textform.js"],"sourcesContent":["// create state \r\n// hooks it is finction based componant\r\nimport React, {useState} from \"react\";\r\n\r\nexport default function Textform(props) {\r\n    // using this function if we can clicked the convert uppercase button the value in the textbox convert to thr uppercase\r\n    \r\n    const handleupClick=()=>{\r\n      let newText= text.toLocaleUpperCase();\r\n        // we want to change the state then we use this function\r\n      setText(newText)\r\n    }\r\n    // \r\n    const handleOnChange=(event)=>{\r\n              setText(event.target.value)\r\n    }\r\n\r\nconst [text,setText]= useState('Enter Text Here');\r\n  return (\r\n    <div>\r\n    {/* //we can assign the props */}\r\n      <h1>{props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n            {/* <label for=\"MyTExt\" class=\"form-label\">\r\n            Enter text\r\n            </label> */}\r\n        <textarea\r\n          className=\"form-control\"\r\n          // in this value we can set the text value using state\r\n          value={text}\r\n          onChange={handleOnChange}\r\n          id=\"exampleFormControlTextarea1\"\r\n          rows=\"18\"\r\n          \r\n        ></textarea>\r\n      </div>\r\n      <button type=\"button\" className=\"btn btn-primary\" onClick={handleupClick}>convert to uppercase</button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA;AACA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,eAAe,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACpC;;EAEA,MAAMC,aAAa,GAACA,CAAA,KAAI;IACtB,IAAIC,OAAO,GAAEC,IAAI,CAACC,iBAAiB,EAAE;IACnC;IACFC,OAAO,CAACH,OAAO,CAAC;EAClB,CAAC;EACD;EACA,MAAMI,cAAc,GAAEC,KAAK,IAAG;IACpBF,OAAO,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;EAEL,MAAM,CAACN,IAAI,EAACE,OAAO,CAAC,GAAEV,QAAQ,CAAC,iBAAiB,CAAC;EAC/C,oBACEE,OAAA;IAAAa,QAAA,gBAEEb,OAAA;MAAAa,QAAA,EAAKX,KAAK,CAACY;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACxBlB,OAAA;MAAKmB,SAAS,EAAC,MAAM;MAAAN,QAAA,eAInBb,OAAA;QACEmB,SAAS,EAAC;QACV;QAAA;QACAP,KAAK,EAAEN,IAAK;QACZc,QAAQ,EAAEX,cAAe;QACzBY,EAAE,EAAC,6BAA6B;QAChCC,IAAI,EAAC;MAAI;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAEC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACR,eACNlB,OAAA;MAAQuB,IAAI,EAAC,QAAQ;MAACJ,SAAS,EAAC,iBAAiB;MAACK,OAAO,EAAEpB,aAAc;MAAAS,QAAA,EAAC;IAAoB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACnG;AAEV;AAACf,EAAA,CAnCuBF,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}